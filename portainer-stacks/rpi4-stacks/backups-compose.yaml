version: "3"

services:
  pihole: &backup_service
    image: offen/docker-volume-backup:v2.37.1@sha256:c7ca7086f234ed5fb09abcdf0b6bf5e5cf930cbccb58dbec162204c38e6e5a6d
    restart: always
    dns:
      - 192.168.1.10
    environment: &backup_env
      AWS_ENDPOINT: "s3.home.lan:9000"
      AWS_ENDPOINT_PROTO: "https"
      AWS_ENDPOINT_INSECURE: "true"
      AWS_ACCESS_KEY_ID: "docker-volumes-backup"
      AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
      AWS_S3_BUCKET_NAME: "docker-volumes-backup"
      AWS_S3_PATH: "/pihole"
      BACKUP_FILENAME: "pihole-%Y-%m-%dT%H-%M-%S.tar.gz"
      BACKUP_EXCLUDE_REGEXP: "(/.*pihole-FTL.db.*$$)|(/.*metrics.interim$$)"
      BACKUP_CRON_EXPRESSION: "0 4 * * *"
      BACKUP_RETENTION_DAYS: "14"
      BACKUP_PRUNING_PREFIX: "pihole-"
      NOTIFICATION_URLS: $NOTIFICATION_URLS
      NOTIFICATION_LEVEL: "error"
    volumes:
      - "pihole_data:/backup/pihole/data:ro"
      - "pihole_dnsmasq:/backup/pihole/dnsmasq:ro"
      
  unifi:
    <<: *backup_service
    environment:
      <<: *backup_env
      AWS_S3_PATH: "/unifi"
      BACKUP_FILENAME: "unifi-%Y-%m-%dT%H-%M-%S.tar.gz"
      BACKUP_CRON_EXPRESSION: "0 5 * * *"
      BACKUP_RETENTION_DAYS: "14"
      BACKUP_PRUNING_PREFIX: "unifi-"
    volumes:
      - "unifi_data:/backup/unifi/data"

volumes:
  pihole_data:
    external: true
  pihole_dnsmasq:
    external: true
  unifi_data:
    external: true
