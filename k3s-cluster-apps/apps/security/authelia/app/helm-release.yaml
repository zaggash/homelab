---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: authelia
spec:
  interval: 15m
  driftDetection:
    mode: enabled
  chart:
    spec:
      chart: authelia
      version: 0.8.58
      sourceRef:
        kind: HelmRepository
        name: authelia-charts
        namespace: flux-system

  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:
    domain: ${SECRET_CLUSTER_DOMAIN}

    ingress:
      enabled: false

    pod:
      # Must be Deployment, DaemonSet, or StatefulSet.
      kind: DaemonSet

      env:
        - name: TZ
          value: Europe/Paris

      resources:
        requests:
          cpu: 100m
          memory: 50Mi
        limits: {}

    ##
    ## Authelia Config Map Generator
    ##
    configMap:
      enabled: true

      server:
        read_buffer_size: 8192
        write_buffer_size: 8192

      theme: light

      authentication_backend:
        password_reset:
          disable: false
        ldap:
          enabled: true
          implementation: custom
          url: ldap://lldap.security.svc.cluster.local:3890
          timeout: 5s
          # Use StartTLS with the LDAP connection, TLS not supported right now
          start_tls: false
          #tls:
          #  skip_verify: false
          #  minimum_version: TLS1.2
          # Set base dn, like dc=google,dc.com
          base_dn: "${SECRET_LLDAP_BASE_DN}"
          username_attribute: uid
          # You need to set this to ou=people, because all users are stored in this ou!
          additional_users_dn: ou=people
          # To allow sign in both with username and email, one can use a filter like
          # (&(|({username_attribute}={input})({mail_attribute}={input}))(objectClass=person))
          # Allow only username use a filter like
          # "(&({username_attribute}={input})(objectClass=person))"
          users_filter: "(&(|({username_attribute}={input})({mail_attribute}={input}))(objectClass=person))"
          # Set this to ou=groups, because all groups are stored in this ou
          additional_groups_dn: ou=groups
          # Only this filter is supported right now
          groups_filter: "(member={dn})"
          # The attribute holding the name of the group.
          group_name_attribute: cn
          # Email attribute
          mail_attribute: mail
          # The attribute holding the display name of the user. This will be used to greet an authenticated user.
          display_name_attribute: displayName
          # The username and password of the admin user.
          # "admin" should be the admin username you set in the LLDAP configuration
          user: "uid=${SECRET_LLDAP_LDAP_USER_DN},ou=people,${SECRET_LLDAP_BASE_DN}"

      session:
        redis:
          enabled: false
        domain: ${SECRET_CLUSTER_DOMAIN}
        same_site: lax
        secret: unsecure_session_secret
        expiration: 1h
        inactivity: 30m
        remember_me_duration: 1w

      storage:
        local:
          enabled: true
          path: /config/db.sqlite3
        postgres:
          enabled: false

      notifier:
        smtp:
          enabled: true
          enabledSecret: true
          host: ${SECRET_OVH_SMTP_HOST}
          port: 587
          username: ${SECRET_OVH_SMTP_USERNAME}
          sender: authelia@${SECRET_CLUSTER_DOMAIN}
          identifier: ${SECRET_CLUSTER_DOMAIN}

      totp:
        disable: false
        issuer: ${SECRET_CLUSTER_DOMAIN}
        algorithm: sha1
        digits: 6
        period: 30
        skew: 1

      default_redirection_url: "https://home.${SECRET_CLUSTER_DOMAIN}"

      access_control:
        ## Default policy can either be 'bypass', 'one_factor', 'two_factor' or 'deny'. It is the policy applied to any
        ## resource if there is no policy to be applied to the user.
        default_policy: deny

        rules:
          # bypass Authelia login page
          - domain:
              - login.${SECRET_CLUSTER_DOMAIN}
            policy: bypass

          # bypass for calibre-web kobo access
          - domain: 
              - books.${SECRET_CLUSTER_DOMAIN}
            resources:
              - "^/kobo([/?].*)?$"
            policy: bypass

          # Any single password authenticated user can view the landing page
          - domain: 
              - home.${SECRET_CLUSTER_DOMAIN}
            subject:
              - ["group:home"]
            policy: one_factor

          # Users 2FA access to listed services
          - domain:
              - "ask.${SECRET_CLUSTER_DOMAIN}"
              - "books.${SECRET_CLUSTER_DOMAIN}"
              - "pass.${SECRET_CLUSTER_DOMAIN}"
            subject: ["group:home"]
            policy: two_factor

          # Admin can always access all the services
          - domain:
              - "*.${SECRET_CLUSTER_DOMAIN}"
            subject: ["group:home_admin"]
            policy: two_factor

    persistence:
      enabled: true
      existingClaim: "authelia"

    secret:
      jwt:
        key: JWT_TOKEN
        value: "${SECRET_AUTHELIA_JWT_SECRET}"
      ldap:
        key: LDAP_PASSWORD
        value: "${SECRET_LLDAP_LDAP_USER_PASS}"
      smtp:
        key: SMTP_PASSWORD
        value: "${SECRET_AUTHELIA_OVH_SMTP_PASSWORD}"
      storageEncryptionKey:
        key: STORAGE_ENCRYPTION_KEY
        value: "${SECRET_AUTHELIA_STORAGE_ENCRYPTION_KEY}"
